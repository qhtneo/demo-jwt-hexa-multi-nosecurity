plugins {
    id 'java'
    id 'java-library' // for api ...
    id 'org.springframework.boot' version '3.2.1'
    id 'io.spring.dependency-management' version '1.1.4'
}

var commonProject = project(':common')
var corsConfigProject = project(corsConfigModule)
var healthCheckProject = project(demoHealthCheckModule)
var jpaCoreProject = project(demoJpaCoreModule)
var globalExceptionHandlerCoreProject = project(globalExceptionHandlerModule)

allprojects {
    group = 'com.example'
    version = '0.0.1-SNAPSHOT'

    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    java {
        sourceCompatibility = JavaVersion.VERSION_21
        targetCompatibility = JavaVersion.VERSION_21
    }

    repositories {
        mavenCentral()
        google()
    }
}

subprojects {
    dependencies {
        implementation 'org.springframework:spring-web'
        implementation 'org.springframework.boot:spring-boot-starter'
        implementation 'com.fasterxml.jackson.core:jackson-annotations'
        implementation 'org.springframework.boot:spring-boot-starter-log4j2'
        developmentOnly 'org.springframework.boot:spring-boot-devtools'
        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

        // Pageable
        implementation 'org.springframework.data:spring-data-commons'

        // Lombok
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
        configureEach {
            // exclude LOGBACK
            exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
        }
    }

    bootJar {
        enabled = false
    }

    // Enable Java Preview (1)
    compileJava {
        options.compilerArgs += [
                '--enable-preview',
                '-Amapstruct.defaultComponentModel=spring',
        ]
    }

    // Enable Java Preview (2)
    compileTestJava {
        options.compilerArgs += ['--enable-preview']
    }

    // Enable Java Preview (3)
    test {
        useJUnitPlatform()
        jvmArgs(['--enable-preview'])
    }
}

project(':common') { /* ... */ }

project(corsConfigModule) {
    dependencies {
        implementation commonProject
        implementation 'org.springframework:spring-webmvc'
    }
}

project(demoJpaCoreModule) {
    dependencies {
        implementation commonProject
        api 'org.springframework.boot:spring-boot-starter-data-jpa'
    }
}

project(globalExceptionHandlerModule) {
    dependencies {
        implementation commonProject
    }
}

project(demoHealthCheckModule) {
    dependencies {
        implementation commonProject
    }
}

// ============================================================================================== Authentication Service
project(authenticationServiceModule) {
    dependencies {
        implementation commonProject
        implementation corsConfigProject
        implementation healthCheckProject
        implementation globalExceptionHandlerCoreProject
        implementation project(authenticationApplicationModule)
        implementation project(authenticationReadModelsModule)
        implementation project(authenticationRdbAdapterModule)
        implementation project(authenticationRedisAdapterModule)
        implementation project(authenticationWebAdapterModule)
        implementation 'org.springframework.boot:spring-boot-starter-web'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }

    bootJar {
        enabled = true
    }
}

project(authenticationApplicationModule) {
    dependencies {
        implementation commonProject
        api project(authenticationDomainModule)
        api project(authenticationExceptionModule)
        api project(authenticationReadModelsModule)

        // password encoder
        implementation 'org.springframework.security:spring-security-crypto'
    }
}

project(authenticationDomainModule) {
    dependencies {
        implementation commonProject
    }
}

project(authenticationExceptionModule) {
    dependencies {
        implementation commonProject
    }
}

project(authenticationReadModelsModule) {
    dependencies {
        implementation commonProject
        api project(authenticationDomainModule)
    }
}

project(authenticationRdbAdapterModule) {
    dependencies {
        implementation commonProject
        implementation jpaCoreProject
        implementation project(authenticationApplicationModule)

        // DB
        runtimeOnly 'org.postgresql:postgresql'

        // Flyway
        implementation 'org.flywaydb:flyway-core'

        // Map Struct
        implementation 'org.mapstruct:mapstruct:1.5.3.Final'
        annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
        annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
    }
}

project(authenticationRedisAdapterModule) {
    dependencies {
        implementation commonProject

        // Map Struct
        implementation 'org.mapstruct:mapstruct:1.5.3.Final'
        annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
        annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
    }
}

project(authenticationMemberClientAdapterModule) {
    dependencies {
        implementation commonProject
        implementation project(authenticationApplicationModule)
        implementation project(memberProfileClientApiModule)

        // Map Struct
        implementation 'org.mapstruct:mapstruct:1.5.3.Final'
        annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
        annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
    }
}

project(authenticationWebAdapterModule) {
    dependencies {
        implementation commonProject
        implementation project(authenticationApplicationModule)

        // jakarta
        implementation 'org.springframework.boot:spring-boot-starter-validation'

        // Map Struct
        implementation 'org.mapstruct:mapstruct:1.5.3.Final'
        annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
        annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
    }
}

// ============================================================================================== Member Profile Service
project(memberProfileServiceModule) {
    dependencies {
        implementation commonProject
        implementation corsConfigProject
        implementation healthCheckProject
        implementation globalExceptionHandlerCoreProject
        implementation project(memberProfileApplicationModule)
        implementation project(memberProfileRdbAdapterModule)
        implementation project(memberProfileWebAdapterModule)
        implementation project(memberProfileInternalApiAdapterModule)
        implementation 'org.springframework.boot:spring-boot-starter-web'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }

    bootJar {
        enabled = true
    }
}

project(memberProfileApplicationModule) {
    dependencies {
        implementation commonProject
        api project(memberProfileDomainModule)
        api project(memberProfileExceptionModule)
        api project(memberProfileReadModelsModule)
    }
}

project(memberProfileDomainModule) {
    dependencies {
        implementation commonProject
    }
}

project(memberProfileExceptionModule) {
    dependencies {
        implementation commonProject
    }
}

project(memberProfileReadModelsModule) {
    dependencies {
        implementation commonProject
        api project(memberProfileDomainModule)
    }
}

project(memberProfileClientApiModule) {
    dependencies {
        implementation commonProject
        api project(memberProfileDomainModule)
        api project(memberProfileReadModelsModule)
        api project(memberProfileExceptionModule)
    }
}

project(memberProfileRdbAdapterModule) {
    dependencies {
        implementation commonProject
        implementation jpaCoreProject
        implementation project(memberProfileApplicationModule)
    }
}

project(memberProfileWebAdapterModule) {
    dependencies {
        implementation commonProject
        implementation project(memberProfileApplicationModule)
    }
}

project(memberProfileInternalApiAdapterModule) {
    dependencies {
        implementation commonProject
        implementation project(memberProfileApplicationModule)
    }
}